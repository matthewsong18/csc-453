FIRST sets:
  arith_exp:   ID INTCON
  assg_or_fn:   opASSG LPAREN
  assg_stmt:   opASSG
  bool_exp:   ID INTCON
  decl_or_func:   COMMA SEMI LPAREN
  expr_list:   ID INTCON
  fn_call:   LPAREN
  formals:   COMMA <epsilon>
  func_defn:   LPAREN
  id_list:   COMMA <epsilon>
  if_stmt:   kwIF
  opt_expr_list:   <epsilon> ID INTCON
  opt_formals:   <epsilon> kwINT
  opt_stmt_list:   <epsilon> ID kwIF kwRETURN LBRACE SEMI kwWHILE
  opt_var_decls:   <epsilon> kwINT
  prog:   <epsilon> kwINT
  relop:   opEQ opNE opLE opLT opGE opGT
  return_stmt:   kwRETURN
  stmt:   ID kwIF kwRETURN LBRACE SEMI kwWHILE
  type:   kwINT
  var_decl:   COMMA SEMI
  while_stmt:   kwWHILE

FOLLOW sets:
  arith_exp:   SEMI opEQ opNE opLE opLT opGE opGT COMMA RPAREN
  assg_or_fn:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE
  assg_stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE
  bool_exp:   RPAREN
  decl_or_func:   kwINT <EOF>
  expr_list:   RPAREN
  fn_call:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE
  formals:   RPAREN
  func_defn:   kwINT <EOF>
  id_list:   SEMI
  if_stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE
  opt_expr_list:   RPAREN
  opt_formals:   RPAREN
  opt_stmt_list:   RBRACE
  opt_var_decls:   ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE
  prog:   <EOF>
  relop:   ID INTCON
  return_stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE
  stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE
  type:   ID
  var_decl:   kwINT ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE <EOF>
  while_stmt:   kwELSE ID kwIF kwRETURN LBRACE SEMI kwWHILE RBRACE
