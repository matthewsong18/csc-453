%token ID kwINT LPAREN RPAREN LBRACE RBRACE SEMI COMMA
%start prog
%%

prog : func_defn   prog
     | var_decl   prog
     | /* epsilon */
     ;

var_decl : type id_list SEMI
    ;

id_list : ID
        | ID COMMA id_list
    ;
     
type : kwINT
    ;

func_defn : type ID LPAREN opt_formals RPAREN LBRACE opt_var_decls opt_stmt_list RBRACE
    ;

opt_formals : /* epsilon */
            | formals
    ;

formals : type ID COMMA formals
        | type ID
    ;

opt_var_decls : /* epsilon */
            | var_decl opt_var_decls
    ;

opt_stmt_list : stmt opt_stmt_list
    | /* epsilon */
    ;

stmt : fn_call
    | while_stmt
    | if_stmt
    | assg_stmt
    | return_stmt
    | LBRACE opt_stmt_list RBRACE
    | SEMI
    ;

if_stmt : kwIF LPAREN bool_exp RPAREN stmt
    | kwIF LPAREN bool_exp RPAREN stmt kwELSE stmt
    ;

while_stmt : kwWHILE LPAREN bool_exp RPAREN stmt
    ;

return_stmt : kwRETURN SEMI
    | kwRETURN arith_exp SEMI
    ;

assg_stmt : ID opASSG arith_exp SEMI
    ;

fn_call : ID LPAREN opt_expr_list RPAREN SEMI
    ;

opt_expr_list : /* epsilon */
    | expr_list
    ;

expr_list : arith_exp COMMA expr_list
  	| arith_exp
    ;

bool_exp : arith_exp relop arith_exp
    ;
 

arith_exp : ID
    | INTCON
    ;
 

relop : opEQ
  	| opNE
  	| opLE
  	| opLT
  	| opGE
  	| opGT
    ;
